openapi: "3.0.2"
info:
  title: Not√°vel app REST API
  version: "1.0.0"
servers:
  - url: https://api.server.test/api/v1
components:
  schemas:
    Project:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: string
        name:
          type: string
        parent_id:
          type: integer
        notes:
          type: array
          items:
            $ref: "#/components/schemas/Note"
        archived:
          type: boolean
    Bullet:
      type: object
      properties:
        id:
          type: integer
        note_id:
          type: integer
        parent_id:
          type: integer
        type:
          type: string
        user_id:
          type: string
        content:
          type: string
        order:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        due_at:
          type: string
          format: date-time
        completed:
          type: boolean
    Note:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        title:
          type: string
          example: Creating Notes
        created_at:
          type: string
          format: date-time
        project_id:
          type: integer
          example: 1
        tags:
          type: array
          items:
            type: string
          example: ["api", "swagger"]
        archived:
          type: boolean
        content:
          type: array
          items:
            $ref: "#/components/schemas/Bullet"
paths:
  /bullets:
    get:
      tags:
        - Bullet Points
      summary: Get all bullet points.
      parameters:
        - in: query
          name: note_id
          schema:
            type: string
          description: Id of note
        - in: query
          name: type
          schema:
            type: string
            enum:
              - bullet
              - task
              - idea
          description: Bullet point type
        - in: query
          name: project_id
          schema:
            type: string
          description: Project id
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Bullet"
    post:
      tags:
        - Bullet Points
      summary: Create new bullet point
      requestBody:
        description: BulletPoint object to create
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Bullet"
        required: true
      responses:
        "201":
          description: OK
  /bullets/{bullet_id}:
    parameters:
      - in: path
        name: bullet_id
        schema:
          type: string
        description: Id bullet point
        required: true
    get:
      tags:
        - Bullet Points
      summary: Get bullet point by id
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bullet"
    put:
      tags:
        - Bullet Points
      summary: Update bullet point
      requestBody:
        description: BulletPoint object to update
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Bullet"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bullet"
    delete:
      tags:
        - Bullet Points
      summary: Delete single bullet point by id
      description: Changes the value of `is_deleted` to `true`
      responses:
        "204":
          description: OK
  /projects:
    get:
      tags:
        - Projects
      summary: Get all projects using query parameters
      parameters:
        - in: query
          name: user_id
          schema:
            type: string
            description: Id of user.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Project"
    post:
      tags:
        - Projects
      summary: Create new project
      requestBody:
        description: Note object to create.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Project"
        required: true
      responses:
        "201":
          description: "successful operation"
  /projects/{project_id}:
    parameters:
      - in: path
        name: project_id
        schema:
          type: string
        description: Id of project
        required: true
    get:
      tags:
        - Projects
      summary: Get project by id
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
    put:
      tags:
        - Projects
      summary: Update existing project
      requestBody:
        description: Project object to be updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Project"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Project"
    delete:
      tags:
        - Projects
      summary: Delete selected project
      parameters:
        - in: path
          name: project_id
          schema:
            type: string
          description: Id of project
          required: true
      description: Changes the value of `is_deleted` to `true`
      responses:
        "204":
          description: OK
  /notes:
    post:
      tags:
        - Notes
      summary: Create new note
      requestBody:
        description: Note object to create.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Note"
        required: true
      responses:
        "201":
          description: "successful operation"
    get:
      tags:
        - Notes
      summary: Get all notes using query parameters.
      parameters:
        - in: query
          name: user_id
          schema:
            type: string
          description: Id of the user.
        - in: query
          name: project_id
          schema:
            type: string
          description: Project id to filter by
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Note"
  /notes/{note_id}:
    parameters:
      - in: path
        name: note_id
        schema:
          type: string
        required: true
        description: Id of the note to get.
    get:
      tags:
        - Notes
      summary: Get note by id
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Note"
    put:
      tags:
        - Notes
      summary: Update existing note
      requestBody:
        description: Note object to be updated.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Note"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Note"
    delete:
      tags:
        - Notes
      summary: Soft-delete note from store.
      parameters:
        - in: path
          name: note_id
          schema:
            type: string
          required: true
          description: Id of the note to get.
      description: Changes the value of `is_deleted` to `true`.
      responses:
        "204":
          description: "sucessful operation"
